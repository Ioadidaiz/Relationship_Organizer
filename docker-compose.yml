services:
  borganizer:
    build: 
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: borganizer-app
    ports:
      - "5000:5000"
    volumes:
      # Persistente Datenbank und Uploads
      - borganizer_data:/app/backend/data
      - borganizer_uploads:/app/backend/uploads
      - borganizer_logs:/app/backend/logs
    environment:
      - NODE_ENV=production
      - PORT=5000
      - TELEGRAM_BOT_TOKEN=8195774806:AAHctS3fb57y0iDdjh8SSw5ovAeOZTriQic
      - TELEGRAM_CHAT_ID=1742489013
      - TELEGRAM_TIMEZONE=Europe/Berlin
      - TELEGRAM_MORNING_SCHEDULE=0 10 * * *
      - TELEGRAM_EVENING_SCHEDULE=0 22 * * *
      - TELEGRAM_NOTIFICATIONS_ENABLED=true
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - borganizer-network

  # NGINX Reverse Proxy f√ºr bessere Performance und Sicherheit
  nginx:
    image: nginx:alpine
    container_name: borganizer-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - borganizer_certs:/etc/nginx/certs:ro
      - borganizer_logs:/var/log/nginx
    depends_on:
      borganizer:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - borganizer-network

volumes:
  borganizer_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/db
  borganizer_uploads:
    driver: local  
    driver_opts:
      type: none
      o: bind
      device: ./data/uploads
  borganizer_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/logs
  borganizer_certs:
    driver: local

networks:
  borganizer-network:
    driver: bridge